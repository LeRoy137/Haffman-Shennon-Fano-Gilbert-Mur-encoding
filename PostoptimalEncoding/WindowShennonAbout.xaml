<Window x:Class="PostoptimalEncoding.WindowShennonAbout"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PostoptimalEncoding"
        mc:Ignorable="d"
        Title="Алгоритм Шеннона" Height="450" Width="800">
    <Window.Background>
        <SolidColorBrush Color="#FF9BB4DE"/>
    </Window.Background>
    <Window.Resources>
        <Style TargetType="Expander">
            <Setter Property="FontWeight" Value="DemiBold"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
        </Style>
        <Style x:Key="textDescription" >
            <Setter Property="TextBlock.FontSize" Value="14"></Setter>
            <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"></Setter>
            <Setter Property="TextBlock.FontWeight" Value="Normal"></Setter>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"></Setter>
        </Style>
    </Window.Resources>
    <Border BorderThickness="2" BorderBrush="#FF531AB6" Margin="5">
        <Grid Background="#FFE3EBEE">
            <Grid Margin="5">
                <ScrollViewer VerticalScrollBarVisibility="Visible">
                    <StackPanel>
                        <Grid>
                            <StackPanel>
                                <TextBlock FontSize="16" FontWeight="DemiBold">Описание:</TextBlock>
                                <TextBlock Name="txtBlockDescription" Style="{StaticResource textDescription}">
                                    Код Шеннона — алгоритм префиксного кодирования алфавита, предложенный Клодом Шенноном, в котором используется избыточность сообщения, заключённая в неоднородном распределении частот символов первичного алфавита, то есть заменяет коды более частых символов короткими последовательностями, а коды более редких символов — более длинными последовательностями.
                                </TextBlock>
                            </StackPanel>
                        </Grid>
                        <Expander Header="Алгоритм">
                            <StackPanel>
                                <TextBlock Style="{StaticResource textDescription}">
                                    Пусть нам даны наборы A и P, тогда для нахождения кодовых слов необходимо:
                                </TextBlock>
                                <TextBlock Style="{StaticResource textDescription}">
                                    1. Отсортировать элементы алфавита по не возрастанию вероятности встречи символа.
                                </TextBlock>
                                <TextBlock Style="{StaticResource textDescription}">
                                    2. Элементу ax поставить в соответствие число bx=∑pi (i∈[1,x−1]), при этом b1=0.
                                </TextBlock>
                                <TextBlock Style="{StaticResource textDescription}">
                                   3. Представить каждое число bx в виде двоичной дроби.
                                </TextBlock>
                                <TextBlock Style="{StaticResource textDescription}">
                                    4. В качестве кодового слова для ax использовать первые Lx=⌈−logpx⌉ коэффициентов представления bx. (⌈z⌉ — наименьшее целое число, не меньшее z)
                                </TextBlock>
                            </StackPanel>
                        </Expander>
                        <Expander Header="Пример">
                            <StackPanel>
                                <TextBlock Style="{StaticResource textDescription}">
                                    Для примера возьмём алфавит A={a,b,c,d,e,f} и набор P
                                </TextBlock>
                                <DataGrid FontSize="14" FontWeight="Normal" HorizontalAlignment="Center"  AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White">

                                    <DataGrid.Items>
                                        <local:RowShennon Col1="px" Col2="0.1" Col3="0.2" Col4="0.1" Col5="0.1" Col6="0.35" Col7="0.15" />
                                    </DataGrid.Items>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn  Header="Символ" Binding="{Binding Path=Col1}" Width="auto" />
                                        <DataGridTextColumn  Header="a" Binding="{Binding Path=Col2}" Width="auto" />
                                        <DataGridTextColumn  Header="b" Binding="{Binding Path=Col3}" Width="auto" />
                                        <DataGridTextColumn  Header="c" Binding="{Binding Path=Col4}" Width="auto" />
                                        <DataGridTextColumn  Header="d" Binding="{Binding Path=Col5}" Width="auto" />
                                        <DataGridTextColumn  Header="e" Binding="{Binding Path=Col6}" Width="auto" />
                                        <DataGridTextColumn  Header="f" Binding="{Binding Path=Col7}" Width="auto" />
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock Style="{StaticResource textDescription}">
                                    По алгоритму сортируем элементы алфавита по не возрастанию px:
                                </TextBlock>
                                <DataGrid FontSize="14" FontWeight="Normal" HorizontalAlignment="Center" AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White">

                                    <DataGrid.Items>
                                        <local:RowShennon Col1="px" Col2="0.35" Col3="0.2" Col4="0.15" Col5="0.1" Col6="0.1" Col7="0.1" />
                                    </DataGrid.Items>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn  Header="Символ" Binding="{Binding Path=Col1}" Width="auto" />
                                        <DataGridTextColumn  Header="e" Binding="{Binding Path=Col2}" Width="auto" />
                                        <DataGridTextColumn  Header="b" Binding="{Binding Path=Col3}" Width="auto" />
                                        <DataGridTextColumn  Header="f" Binding="{Binding Path=Col4}" Width="auto" />
                                        <DataGridTextColumn  Header="a" Binding="{Binding Path=Col5}" Width="auto" />
                                        <DataGridTextColumn  Header="c" Binding="{Binding Path=Col6}" Width="auto" />
                                        <DataGridTextColumn  Header="d" Binding="{Binding Path=Col7}" Width="auto" />
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock Style="{StaticResource textDescription}">
                                    Каждому символу ax сопоставляем bx:
                                </TextBlock>
                                <DataGrid FontSize="14" FontWeight="Normal" HorizontalAlignment="Center" AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White">

                                    <DataGrid.Items>
                                        <local:RowShennon Col1="bx" Col2="0.00" Col3="0.35" Col4="0.55" Col5="0.7" Col6="0.8" Col7="0.9" />
                                    </DataGrid.Items>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn  Header="Символ" Binding="{Binding Path=Col1}" Width="auto" />
                                        <DataGridTextColumn  Header="e" Binding="{Binding Path=Col2}" Width="auto" />
                                        <DataGridTextColumn  Header="b" Binding="{Binding Path=Col3}" Width="auto" />
                                        <DataGridTextColumn  Header="f" Binding="{Binding Path=Col4}" Width="auto" />
                                        <DataGridTextColumn  Header="a" Binding="{Binding Path=Col5}" Width="auto" />
                                        <DataGridTextColumn  Header="c" Binding="{Binding Path=Col6}" Width="auto" />
                                        <DataGridTextColumn  Header="d" Binding="{Binding Path=Col7}" Width="auto" />
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock Style="{StaticResource textDescription}">
                                    Переведём bx в двоичную систему счисления:
                                </TextBlock>
                                <DataGrid FontSize="14" FontWeight="Normal" HorizontalAlignment="Center" AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White">

                                    <DataGrid.Items>
                                        <local:RowShennon Col1="bx" Col2="0.00000" Col3="0.01010" Col4="0.10001" Col5="0.10110" Col6="0.11001" Col7="0.11100" />
                                    </DataGrid.Items>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn  Header="Символ" Binding="{Binding Path=Col1}" Width="auto" />
                                        <DataGridTextColumn  Header="e" Binding="{Binding Path=Col2}" Width="auto" />
                                        <DataGridTextColumn  Header="b" Binding="{Binding Path=Col3}" Width="auto" />
                                        <DataGridTextColumn  Header="f" Binding="{Binding Path=Col4}" Width="auto" />
                                        <DataGridTextColumn  Header="a" Binding="{Binding Path=Col5}" Width="auto" />
                                        <DataGridTextColumn  Header="c" Binding="{Binding Path=Col6}" Width="auto" />
                                        <DataGridTextColumn  Header="d" Binding="{Binding Path=Col7}" Width="auto" />
                                    </DataGrid.Columns>
                                </DataGrid>
                                <TextBlock Style="{StaticResource textDescription}">
                                    Посчитаем Lx и запишем коды:
                                </TextBlock>
                                <DataGrid FontSize="14" FontWeight="Normal" HorizontalAlignment="Center" AutoGenerateColumns="False" HorizontalGridLinesBrush="DarkGray"
    RowBackground="LightGray" AlternatingRowBackground="White">

                                    <DataGrid.Items>
                                        <local:RowShennon Col1="Lx" Col2="2" Col3="3" Col4="3" Col5="4" Col6="4" Col7="4" />
                                        <local:RowShennon Col1="Код" Col2="00" Col3="010" Col4="100" Col5="1011" Col6="1100" Col7="1110" />
                                    </DataGrid.Items>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn  Header="Символ" Binding="{Binding Path=Col1}" Width="auto" />
                                        <DataGridTextColumn  Header="e" Binding="{Binding Path=Col2}" Width="auto" />
                                        <DataGridTextColumn  Header="b" Binding="{Binding Path=Col3}" Width="auto" />
                                        <DataGridTextColumn  Header="f" Binding="{Binding Path=Col4}" Width="auto" />
                                        <DataGridTextColumn  Header="a" Binding="{Binding Path=Col5}" Width="auto" />
                                        <DataGridTextColumn  Header="c" Binding="{Binding Path=Col6}" Width="auto" />
                                        <DataGridTextColumn  Header="d" Binding="{Binding Path=Col7}" Width="auto" />
                                    </DataGrid.Columns>
                                </DataGrid>


                            </StackPanel>
                        </Expander>
                    </StackPanel>
                </ScrollViewer>
                <Button FontWeight="DemiBold" HorizontalAlignment="Right"  VerticalAlignment="Bottom" Margin="5,5,20,10" x:Name="btnOk" Height="50" Width="50" Content="Ok" Click="btnOk_Click" Background="#FFA0A6EA" BorderBrush="#FF6A3497">

                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>
